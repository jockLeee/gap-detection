from numpy import *
from scipy import optimize, odr
import functools
from matplotlib import pyplot as plt, cm, colors

plt.rcParams["font.sans-serif"] = ["SimHei"]  # 设置字体
plt.rcParams["axes.unicode_minus"] = False  # 该语句解决图像中的“-”负号的乱码问题
x1 = []
y1 = []
x2 = []
y2 = []
x3 = []
y3 = []
x4 = []
y4 = []
x5 = []
y5 = []
x6 = []
y6 = []
x7 = []
y7 = []
x8 = []
y8 = []
x9 = []
y9 = []
lst1 = [[10, 262], [11, 262], [12, 262], [13, 262], [14, 261], [15, 260], [15, 261], [16, 259], [16, 260], [17, 258], [17, 259], [18, 258], [19, 257],
[20, 256], [20, 257], [21, 255], [21, 256], [22, 254], [22, 255], [23, 254], [24, 253], [25, 253], [26, 252], [26, 253], [27, 252], [28, 251],
[29, 251], [30, 250], [31, 250], [32, 250], [33, 250], [34, 250], [35, 250], [36, 250], [37, 250], [38, 250], [39, 250], [40, 249], [41, 249],
[42, 249], [43, 249], [44, 248], [45, 248], [46, 248], [47, 248], [48, 248], [49, 248], [50, 248], [51, 248], [52, 248], [53, 248], [54, 248],
[55, 248], [56, 248], [57, 247], [58, 247], [59, 247], [60, 248], [61, 248], [62, 249], [63, 249], [63, 250], [64, 250], [65, 251], [66, 251],
[66, 252], [67, 252], [67, 253], [68, 253], [68, 254], [68, 278], [68, 279], [68, 280], [68, 281], [68, 282], [68, 283], [68, 284], [68, 285],
[68, 286], [68, 287], [68, 288], [68, 289], [68, 290], [68, 291], [68, 292], [69, 255], [69, 256], [69, 257], [69, 258], [69, 259], [69, 260],
[69, 261], [69, 271], [69, 272], [69, 273], [69, 274], [69, 275], [69, 276], [69, 277], [69, 293], [69, 294], [69, 295], [69, 296], [69, 297],
[69, 298], [70, 262], [70, 263], [70, 264], [70, 265], [70, 266], [70, 267], [70, 268], [70, 269], [70, 270], [70, 299], [70, 300], [71, 300],
[71, 301], [72, 302], [72, 303], [73, 303], [74, 304], [75, 304]]
lst2 = [[76, 304], [77, 303], [77, 304], [78, 302], [78, 303], [79, 301], [79, 302], [80, 300], [80, 301], [81, 298], [81, 299], [82, 296], [82, 297],
[83, 294], [83, 295], [84, 291], [84, 292], [84, 293], [85, 289], [85, 290], [86, 286], [86, 287], [86, 288], [86, 289], [87, 284], [87, 285],
[88, 283], [88, 284], [89, 276], [89, 280], [89, 281], [89, 282], [89, 283], [90, 274], [90, 275], [90, 277], [90, 278], [90, 279], [91, 271],
[91, 272], [91, 273], [92, 269], [92, 270], [93, 268], [93, 269], [94, 267], [94, 268], [95, 265], [95, 266], [96, 262], [96, 263], [96, 264],
[96, 265], [97, 260], [97, 261], [98, 259], [98, 260], [99, 258], [99, 259], [100, 256], [100, 257], [101, 256], [102, 255], [103, 254], [103, 255],
[104, 253], [104, 254], [105, 252], [105, 253], [106, 252], [107, 251], [108, 250], [108, 251], [109, 248], [109, 249], [110, 247], [110, 248],
[111, 247], [112, 246], [113, 246], [114, 245], [115, 245], [116, 245], [117, 245], [118, 245], [119, 244], [120, 244], [121, 244], [122, 244],
[123, 244], [124, 244], [125, 244], [126, 244], [127, 244], [128, 244], [129, 244], [130, 244], [131, 244], [132, 244], [133, 244], [134, 244],
[135, 244], [136, 244], [137, 244], [138, 244], [139, 244], [140, 244], [141, 244], [142, 244], [143, 244], [144, 244], [145, 244], [146, 244],
[147, 244], [148, 245], [149, 245], [150, 246], [151, 246], [152, 247], [153, 247], [153, 248], [154, 248], [155, 249], [156, 249], [156, 250],
[157, 250], [157, 251], [158, 252], [158, 253], [159, 254], [159, 255], [160, 256], [160, 257], [161, 258], [161, 259], [162, 259], [162, 260],
[163, 261], [163, 262], [164, 262], [165, 263], [166, 263], [167, 263]]
lst3 = [[168, 263], [169, 263], [170, 263], [171, 262], [172, 261], [172, 262], [173, 261], [174, 260], [175, 259], [175, 260], [176, 258], [176, 259],
[177, 257], [177, 258], [178, 257], [179, 256], [180, 255], [180, 256], [181, 255], [182, 254], [183, 253], [183, 254], [184, 253], [185, 252],
[186, 252], [187, 251], [188, 251], [189, 250], [190, 250], [191, 249], [192, 249], [193, 249], [194, 249], [195, 248], [196, 248], [197, 248],
[198, 248], [199, 248], [200, 249], [201, 249], [202, 249], [203, 248], [204, 248], [205, 248], [206, 248], [207, 248], [208, 248], [209, 248],
[210, 248], [211, 248], [212, 247], [213, 247], [214, 246], [215, 246], [216, 246], [217, 246], [218, 246], [219, 246], [220, 246], [221, 247],
[222, 247], [222, 248], [223, 248], [223, 249], [224, 249], [225, 250], [226, 250], [226, 251], [227, 251], [227, 252], [228, 252], [228, 253],
[229, 253], [229, 254], [230, 254], [230, 255], [231, 255], [231, 256], [232, 257], [232, 258], [233, 259], [233, 260], [234, 260], [234, 261],
[235, 262], [235, 263], [236, 263], [236, 264], [237, 264], [237, 265], [238, 266], [239, 267], [240, 267], [241, 267]]
lst4 = [[242, 267], [243, 267], [244, 267], [245, 266], [246, 265], [246, 266], [247, 265], [248, 264], [249, 263], [249, 264], [250, 262], [250, 263],
[251, 261], [251, 262], [252, 260], [252, 261], [253, 259], [254, 258], [255, 257], [256, 256], [257, 255], [257, 256], [258, 255], [259, 254],
[260, 254], [261, 253], [262, 252], [262, 253], [263, 252], [264, 251], [265, 251], [266, 251], [267, 250], [268, 250], [269, 249], [270, 249],
[271, 249], [272, 249], [273, 249], [274, 249], [275, 249], [276, 249], [277, 249], [278, 249], [279, 249], [280, 249], [281, 249], [282, 248],
[283, 248], [284, 248], [285, 248], [286, 248], [287, 248], [288, 248], [289, 248], [290, 248], [291, 248], [292, 248], [293, 248], [294, 248],
[295, 248], [296, 248], [297, 248], [298, 249], [299, 249], [299, 250], [300, 250], [300, 251], [301, 251], [301, 252], [302, 252], [302, 253],
[303, 253], [303, 254], [304, 254], [305, 255], [306, 255], [306, 256], [307, 257], [307, 258], [308, 258], [308, 259], [309, 259], [309, 260],
[310, 260], [310, 261], [311, 262], [312, 263], [313, 263], [313, 264], [314, 264], [315, 264]]
lst5 = [[316, 264], [317, 264], [318, 263], [318, 264], [319, 263], [320, 262], [321, 261], [321, 262], [322, 260], [322, 261], [323, 259], [323, 260],
[324, 258], [324, 259], [325, 256], [325, 257], [326, 255], [326, 256], [327, 254], [328, 253], [329, 252], [329, 253], [330, 251], [330, 252],
[331, 251], [332, 250], [333, 250], [334, 249], [335, 249], [336, 248], [337, 248], [338, 247], [338, 248], [339, 247], [340, 246], [341, 246],
[342, 246], [343, 246], [344, 246], [345, 246], [346, 246], [347, 245], [348, 245], [349, 245], [350, 245], [351, 245], [352, 245], [353, 245],
[354, 245], [355, 245], [356, 245], [357, 245], [358, 245], [359, 245], [360, 245], [361, 245], [362, 245], [363, 245], [364, 245], [365, 245],
[366, 245], [367, 245], [368, 245], [369, 245], [370, 246], [371, 246], [372, 247], [373, 247], [373, 248], [374, 248], [375, 249], [376, 249],
[376, 250], [377, 250], [377, 251], [378, 251], [378, 252], [379, 252], [379, 253], [380, 254], [380, 255], [381, 255], [381, 256], [382, 257],
[382, 258], [383, 258], [383, 259], [384, 259], [384, 260], [385, 261], [385, 262], [386, 262], [387, 263], [388, 263], [388, 264], [389, 264],
[390, 264]]
lst6 = [[391, 264], [392, 264], [393, 263], [394, 262], [394, 263], [395, 261], [395, 262], [396, 260], [396, 261], [397, 258], [397, 259], [398, 257],
[398, 258], [399, 256], [399, 257], [400, 255], [400, 256], [401, 255], [402, 254], [403, 254], [404, 253], [404, 254], [405, 251], [405, 252],
[406, 250], [406, 251], [407, 249], [407, 250], [408, 249], [409, 248], [410, 248], [411, 247], [411, 248], [412, 247], [413, 246], [414, 246],
[415, 246], [416, 246], [417, 246], [418, 246], [419, 246], [420, 246], [421, 245], [422, 245], [423, 245], [424, 245], [425, 244], [426, 244],
[427, 244], [428, 245], [429, 245], [430, 245], [431, 245], [432, 245], [433, 245], [434, 245], [435, 245], [436, 245], [437, 245], [438, 245],
[439, 245], [440, 245], [441, 245], [442, 246], [443, 246], [444, 246], [445, 247], [446, 247], [446, 248], [447, 248], [448, 248], [449, 249],
[450, 249], [450, 250], [451, 250], [451, 251], [452, 251], [452, 252], [453, 252], [453, 253], [454, 254], [454, 255], [455, 256], [455, 257],
[456, 258], [456, 259], [457, 260], [457, 261], [458, 262], [458, 263], [459, 263], [459, 264], [460, 265], [460, 266], [461, 266], [462, 266],
[463, 266], [464, 266]]
lst7 = [[465, 266], [466, 266], [467, 266], [468, 265], [468, 266], [469, 264], [469, 265], [470, 262], [470, 263], [471, 261], [471, 262], [472, 259],
[472, 260], [473, 258], [473, 259], [474, 258], [475, 257], [476, 257], [477, 256], [477, 257], [478, 255], [478, 256], [479, 255], [480, 254],
[481, 252], [481, 253], [482, 251], [482, 252], [483, 251], [484, 250], [485, 250], [486, 250], [487, 250], [488, 250], [489, 249], [490, 249],
[491, 249], [492, 249], [493, 248], [494, 248], [495, 248], [496, 248], [497, 247], [498, 247], [499, 247], [500, 246], [501, 246], [502, 246],
[503, 246], [504, 246], [505, 246], [506, 246], [507, 246], [508, 246], [509, 246], [510, 247], [511, 247], [512, 247], [513, 247], [514, 247],
[515, 247], [516, 247], [517, 248], [518, 248], [519, 248], [520, 249], [521, 249], [522, 250], [523, 250], [523, 251], [524, 251], [524, 252],
[525, 252], [525, 253], [526, 253], [526, 254], [527, 254], [527, 255], [528, 255], [528, 256], [529, 257], [529, 258], [530, 259], [530, 260],
[530, 261], [531, 262], [531, 263], [532, 264], [532, 265], [533, 266], [533, 267], [533, 268], [534, 269], [534, 270], [534, 271], [535, 272],
[535, 273], [536, 273], [537, 273]]
lst8 = [[538, 273], [539, 272], [539, 273], [540, 270], [540, 271], [540, 272], [541, 268], [541, 269], [542, 265], [542, 266], [542, 267], [543, 263],
[543, 264], [544, 263], [545, 262], [546, 261], [546, 262], [547, 261], [548, 260], [549, 259], [549, 260], [550, 258], [550, 259], [551, 256],
[551, 257], [552, 254], [552, 255], [553, 252], [553, 253], [554, 251], [554, 252], [555, 251], [556, 250], [557, 250], [558, 249], [559, 249],
[560, 248], [561, 247], [561, 248], [562, 247], [563, 246], [564, 246], [565, 246], [566, 245], [567, 245], [568, 245], [569, 245], [570, 245],
[571, 244], [572, 244], [573, 244], [574, 244], [575, 244], [576, 244], [577, 244], [578, 244], [579, 244], [580, 244], [581, 244], [582, 244],
[583, 244], [584, 244], [585, 244], [586, 244], [587, 244], [588, 244], [589, 244], [590, 244], [591, 245], [592, 245], [593, 245], [594, 245],
[595, 246], [596, 246], [597, 247], [598, 247], [598, 248], [599, 248], [599, 249], [600, 249], [601, 250], [602, 250], [602, 251], [603, 252],
[603, 253], [604, 254], [604, 255], [605, 255], [605, 256], [606, 257], [606, 258], [607, 258], [607, 259], [608, 260], [608, 261], [608, 262],
[608, 263], [608, 264], [608, 265], [608, 266], [608, 267], [609, 268], [609, 269], [610, 270], [610, 271], [610, 272], [610, 273], [610, 274],
[610, 275], [611, 276], [611, 277], [611, 278], [611, 279], [611, 280], [611, 281], [611, 282], [611, 283], [611, 284], [611, 285], [611, 286],
[611, 287], [612, 288], [612, 289], [612, 290], [612, 291], [612, 292], [613, 293], [613, 294], [613, 295], [613, 296], [614, 297], [614, 298],
[614, 299], [615, 300], [615, 301], [616, 301], [616, 302], [617, 302], [618, 303], [619, 303]]
lst9 = [[620, 303], [621, 303], [622, 303], [623, 302], [624, 301], [624, 302], [625, 290], [625, 291], [625, 292], [625, 293], [625, 294], [625, 295],
[625, 296], [625, 297], [625, 298], [625, 299], [625, 300], [626, 283], [626, 284], [626, 285], [626, 286], [626, 287], [626, 288], [626, 289],
[627, 277], [627, 278], [627, 279], [627, 280], [627, 281], [627, 282], [628, 269], [628, 270], [628, 271], [628, 272], [628, 273], [628, 274],
[628, 275], [628, 276], [629, 266], [629, 267], [629, 268], [630, 263], [630, 264], [630, 265], [631, 262], [632, 259], [632, 260], [632, 261],
[633, 258], [634, 257], [635, 256], [636, 255], [637, 255], [638, 255], [639, 255], [640, 254], [641, 252], [641, 253], [642, 251], [643, 250],
[644, 250], [645, 250], [646, 249], [647, 249], [648, 248], [649, 248], [650, 247], [651, 247], [652, 247], [653, 247], [654, 247], [655, 246],
[656, 246], [657, 246], [658, 246], [659, 246], [660, 246], [661, 246], [662, 246], [663, 246], [664, 246], [665, 246], [666, 246], [667, 246],
[668, 246], [669, 246], [670, 246], [671, 246], [672, 246], [673, 246], [674, 246], [675, 247], [676, 247], [677, 248], [678, 248], [678, 249],
[679, 249], [680, 249], [681, 250], [682, 250], [682, 251], [683, 251], [683, 252], [684, 252], [684, 253], [685, 254], [685, 255], [686, 255],
[686, 256], [687, 257], [687, 258], [688, 258], [688, 259], [689, 260], [689, 261], [690, 262], [690, 263], [691, 263], [691, 264], [692, 264],
[693, 265], [694, 265], [695, 265], [696, 265]]

for i in lst1:
    x1.append(i[0])
    y1.append(-i[1])
for i in lst2:
    x2.append(i[0])
    y2.append(-i[1])
for i in lst3:
    x3.append(i[0])
    y3.append(-i[1])
for i in lst4:
    x4.append(i[0])
    y4.append(-i[1])
for i in lst5:
    x5.append(i[0])
    y5.append(-i[1])
for i in lst6:
    x6.append(i[0])
    y6.append(-i[1])
for i in lst7:
    x7.append(i[0])
    y7.append(-i[1])
for i in lst8:
    x8.append(i[0])
    y8.append(-i[1])
for i in lst9:
    x9.append(i[0])
    y9.append(-i[1])
x_m1 = mean(x1)
y_m1 = mean(y1)
x_m2 = mean(x2)
y_m2 = mean(y2)
x_m3 = mean(x3)
y_m3 = mean(y3)
x_m4 = mean(x4)
y_m4 = mean(y4)
x_m5 = mean(x5)
y_m5 = mean(y5)
x_m6 = mean(x6)
y_m6 = mean(y6)
x_m7 = mean(x7)
y_m7 = mean(y7)
x_m8 = mean(x8)
y_m8 = mean(y8)
x_m9 = mean(x9)
y_m9 = mean(y9)
method_2 = "最小二乘法    "
def countcalls(fn):
    "decorator function count function calls "
    @functools.wraps(fn)
    def wrapped(*args):
        wrapped.ncalls += 1
        return fn(*args)
    wrapped.ncalls = 0
    return wrapped
def calc_R(xc, yc):
    """ 计算s数据点与圆心(xc, yc)的距离 """
    return sqrt((x1 - xc) ** 2 + (y1 - yc) ** 2)
@countcalls
def f_1(c):
    """ 计算半径残余"""
    Ri = calc_R(*c)
    return Ri - Ri.mean()
def getxyr(x_m, y_m):
    center_estimate = x_m, y_m
    center_2, _ = optimize.leastsq(f_1, center_estimate)
    xc, yc = center_2
    Ri_2 = calc_R(xc, yc)
    R_2 = Ri_2.mean()
    return xc,yc,R_2



xc_1,yc_1,R_1 = getxyr(x_m1,y_m1)
ser = [[xc_1,yc_1,R_1]]
# print(getxyr1(x_m1,y_m1))

# residu_2 = sum((Ri_2 - R_2) ** 2)
# residu2_2 = sum((Ri_2 ** 2 - R_2 ** 2) ** 2)
# ncalls_2 = f_2.ncalls
# fmt = '%-22s  %10.5f  %10.5f  %10.5f  '
# print(('\n%-22s' + ' %10s' * 3) % tuple('方法  Xc  Yc  Rc'.split()))
# print('-' * (22 + 4 * (10 + 1)))
# print(fmt % (method_2, xc_2, yc_2, R_2))

plt.figure(facecolor='white')  # figsize=(7, 5.4), dpi=72,
plt.axis('equal')
theta_fit = linspace(-pi, pi, 180)
x_fit2 = xc_1 + R_1 * cos(theta_fit)
y_fit2 = yc_1 + R_1 * sin(theta_fit)
plt.plot(x_fit2, y_fit2, 'bo-', label=method_2,ms=2, lw=0.1)
plt.plot([xc_1], [yc_1], 'gD', mec='r', mew=1)
plt.xlabel('x')
plt.ylabel('y')
plt.plot(x1, y1, 'ro',  ms=4, mec='b', mew=0)
plt.plot(x2, y2, 'ro',  ms=4, mec='b', mew=0)
plt.plot(x3, y3, 'ro',  ms=4, mec='b', mew=0)
plt.plot(x4, y4, 'ro',  ms=4, mec='b', mew=0)
plt.plot(x5, y5, 'ro',  ms=4, mec='b', mew=0)
plt.plot(x6, y6, 'ro',  ms=4, mec='b', mew=0)
plt.plot(x7, y7, 'ro',  ms=4, mec='b', mew=0)
plt.plot(x8, y8, 'ro',  ms=4, mec='b', mew=0)
plt.plot(x9, y9, 'ro',  ms=4, mec='b', mew=0)

plt.legend(loc='best', labelspacing=0.1)

plt.show()
